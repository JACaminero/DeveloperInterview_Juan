{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\juanc\\\\Desktop\\\\React\\\\anew\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport logo from './logo.svg';\nimport './App.css';\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [imageUrl, imageState] = useState();\n\n  const getCatData = async () => {\n    let catData = {\n      \"url\": \"\",\n      \"tags\": []\n    }; //I'm a typescript guy, in a real life implementation I would've created a model class to take in my request\n    //, but to keep this simple  I prefer to just declare an empty object.\n\n    await fetch(`https://localhost:44356/api/cats`).then(response => response.json()).then(data => {\n      catData.url = data.url;\n      data.tags.forEach(e => {\n        catData.tags.push(e);\n      });\n    });\n    return catData;\n  };\n\n  const fillImages = () => {\n    let catDataList = [];\n\n    for (let i = 0; i < 9; i++) {\n      catDataList.push(getCatData().then(res => res.catData));\n      console.log(catData);\n    }\n\n    catDataList.map(_ref => {\n      let {\n        id,\n        src\n      } = _ref;\n      return /*#__PURE__*/_jsxDEV(\"img\", {\n        src: src\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 36\n      }, this);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: getCatData,\n      children: \"get\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        className: \"App-logo\",\n        alt: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Edit \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"src/App.js\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 16\n        }, this), \" and save to reload.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        className: \"App-link\",\n        href: \"https://reactjs.org\",\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        children: \"Learn React\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"item\",\n        src: \"\",\n        alt: \"Example image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"EpeTT1PoA0j0b4I6CzeJEeFK1pE=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/juanc/Desktop/React/anew/src/App.js"],"names":["logo","React","useState","App","imageUrl","imageState","getCatData","catData","fetch","then","response","json","data","url","tags","forEach","e","push","fillImages","catDataList","i","res","console","log","map","id","src"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,YAAjB;AACA,OAAO,WAAP;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AAEb,QAAM,CAACC,QAAD,EAAWC,UAAX,IAAyBH,QAAQ,EAAvC;;AACA,QAAMI,UAAU,GAAG,YAAY;AAC7B,QAAIC,OAAO,GAAG;AAAE,aAAO,EAAT;AAAa,cAAQ;AAArB,KAAd,CAD6B,CAE7B;AACA;;AACA,UAAMC,KAAK,CAAE,kCAAF,CAAL,CACHC,IADG,CACEC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADd,EAEHF,IAFG,CAEEG,IAAI,IAAI;AACZL,MAAAA,OAAO,CAACM,GAAR,GAAcD,IAAI,CAACC,GAAnB;AACAD,MAAAA,IAAI,CAACE,IAAL,CAAUC,OAAV,CAAkBC,CAAC,IAAI;AACrBT,QAAAA,OAAO,CAACO,IAAR,CAAaG,IAAb,CAAkBD,CAAlB;AACD,OAFD;AAGD,KAPG,CAAN;AAQA,WAAOT,OAAP;AACD,GAbD;;AAeA,QAAMW,UAAU,GAAG,MAAM;AAEvB,QAAIC,WAAW,GAAG,EAAlB;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;AAC1BD,MAAAA,WAAW,CAACF,IAAZ,CAAiBX,UAAU,GAAGG,IAAb,CAAmBY,GAAG,IAAIA,GAAG,CAACd,OAA9B,CAAjB;AACAe,MAAAA,OAAO,CAACC,GAAR,CAAYhB,OAAZ;AACD;;AACDY,IAAAA,WAAW,CAACK,GAAZ,CAAgB;AAAA,UAAC;AAACC,QAAAA,EAAD;AAAKC,QAAAA;AAAL,OAAD;AAAA,0BAAe;AAAc,QAAA,GAAG,EAAEA;AAAnB,SAAUD,EAAV;AAAA;AAAA;AAAA;AAAA,cAAf;AAAA,KAAhB;AAED,GATD;;AAWA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BAEE;AAAQ,MAAA,OAAO,EAAEnB,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAIE;AAAQ,MAAA,SAAS,EAAC,YAAlB;AAAA,8BACE;AAAK,QAAA,GAAG,EAAEN,IAAV;AAAgB,QAAA,SAAS,EAAC,UAA1B;AAAqC,QAAA,GAAG,EAAC;AAAzC;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,yCACO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADP;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAKE;AACE,QAAA,SAAS,EAAC,UADZ;AAEE,QAAA,IAAI,EAAC,qBAFP;AAGE,QAAA,MAAM,EAAC,QAHT;AAIE,QAAA,GAAG,EAAC,qBAJN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,eAkBE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,6BAEE;AAAK,QAAA,SAAS,EAAC,MAAf;AAAsB,QAAA,GAAG,EAAC,EAA1B;AAA6B,QAAA,GAAG,EAAC;AAAjC;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA,YAlBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA6BD;;GA1DQG,G;;KAAAA,G;AA4DT,eAAeA,GAAf","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport React, { useState } from 'react';\n\nfunction App() {\n\n  const [imageUrl, imageState] = useState()\n  const getCatData = async () => {\n    let catData = { \"url\": \"\", \"tags\": [] }\n    //I'm a typescript guy, in a real life implementation I would've created a model class to take in my request\n    //, but to keep this simple  I prefer to just declare an empty object.\n    await fetch(`https://localhost:44356/api/cats`)\n      .then(response => response.json())\n      .then(data => {\n        catData.url = data.url\n        data.tags.forEach(e => {\n          catData.tags.push(e)\n        });\n      });\n    return catData\n  }\n\n  const fillImages = () => {\n\n    let catDataList = []\n    for (let i = 0; i < 9; i++) {\n      catDataList.push(getCatData().then( res => res.catData))\n      console.log(catData)\n    }\n    catDataList.map(({id, src}) => <img key={id} src={src} />)\n\n  }\n\n  return (\n    <div className=\"App\">\n      \n      <button onClick={getCatData}>get</button>\n      \n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n      <div className=\"container\">\n\n        <img className=\"item\" src=\"\" alt=\"Example image\" />\n        {\n          /* <img class=\"item\" src=\"https://source.unsplash.com/random/320x240\" alt=\"Example image\" />\n          <img class=\"item\" src=\"https://source.unsplash.com/random/320x240\" alt=\"Example image\" /> */\n        }\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}