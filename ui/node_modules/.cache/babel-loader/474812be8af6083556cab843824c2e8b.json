{"ast":null,"code":"export class CatService {\n  constructor() {\n    this.catDataList = [];\n\n    this.fetch10Cats = () => {\n      let catDataList = [];\n\n      for (let i = 0; i < 9; i++) {\n        catDataList.push(this.etCatData().then(res => res.catData));\n      }\n\n      return catDataList;\n    };\n  }\n\n  async getCatData() {\n    let catData = {\n      \"url\": \"\",\n      \"tags\": []\n    }; //I'm a typescript guy, in a real life implementation I would've created a model class to take in my request\n    //, but to keep this simple  I prefer to just declare an empty object.\n\n    await fetch(`https://localhost:44356/api/cats`).then(response => response.json()).then(data => {\n      catData.url = data.url;\n      data.tags.forEach(e => {\n        catData.tags.push(e);\n      });\n    });\n    return catData;\n  }\n\n}\nexport default CatService;","map":{"version":3,"sources":["C:/Users/juanc/Desktop/React/anew/src/services/CatService.js"],"names":["CatService","constructor","catDataList","fetch10Cats","i","push","etCatData","then","res","catData","getCatData","fetch","response","json","data","url","tags","forEach","e"],"mappings":"AACA,OAAO,MAAMA,UAAN,CAAiB;AAKtBC,EAAAA,WAAW,GAAG;AAAA,SAHdC,WAGc,GAHA,EAGA;;AAAA,SAmBdC,WAnBc,GAmBA,MAAM;AAClB,UAAID,WAAW,GAAG,EAAlB;;AACA,WAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;AAC1BF,QAAAA,WAAW,CAACG,IAAZ,CAAiB,KAAKC,SAAL,GAAiBC,IAAjB,CAAsBC,GAAG,IAAIA,GAAG,CAACC,OAAjC,CAAjB;AACD;;AACD,aAAOP,WAAP;AACD,KAzBa;AAEb;;AAEe,QAAVQ,UAAU,GAAG;AACjB,QAAID,OAAO,GAAG;AAAE,aAAO,EAAT;AAAa,cAAQ;AAArB,KAAd,CADiB,CAEjB;AACA;;AACA,UAAME,KAAK,CAAE,kCAAF,CAAL,CACHJ,IADG,CACEK,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADd,EAEHN,IAFG,CAEEO,IAAI,IAAI;AACZL,MAAAA,OAAO,CAACM,GAAR,GAAcD,IAAI,CAACC,GAAnB;AACAD,MAAAA,IAAI,CAACE,IAAL,CAAUC,OAAV,CAAkBC,CAAC,IAAI;AACrBT,QAAAA,OAAO,CAACO,IAAR,CAAaX,IAAb,CAAkBa,CAAlB;AACD,OAFD;AAGD,KAPG,CAAN;AAQA,WAAOT,OAAP;AACC;;AAtBmB;AAiCxB,eAAeT,UAAf","sourcesContent":["\r\nexport class CatService {\r\n\r\n  catDataList = []\r\n\r\n\r\n  constructor() {\r\n    \r\n  }\r\n\r\n  async getCatData() {\r\n    let catData = { \"url\": \"\", \"tags\": [] }\r\n    //I'm a typescript guy, in a real life implementation I would've created a model class to take in my request\r\n    //, but to keep this simple  I prefer to just declare an empty object.\r\n    await fetch(`https://localhost:44356/api/cats`)\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        catData.url = data.url\r\n        data.tags.forEach(e => {\r\n          catData.tags.push(e)\r\n        });\r\n      });\r\n    return catData\r\n    }\r\n\r\n  fetch10Cats = () => {\r\n    let catDataList = []\r\n    for (let i = 0; i < 9; i++) {\r\n      catDataList.push(this.etCatData().then(res => res.catData))\r\n    }\r\n    return catDataList\r\n  }\r\n}\r\n\r\nexport default CatService"]},"metadata":{},"sourceType":"module"}