{"ast":null,"code":"export class CatService {\n  constructor() {\n    this.catDataList = [];\n  }\n\n  async getCatData() {\n    let catData = {\n      \"url\": \"\",\n      \"tags\": []\n    }; //I'm a typescript guy, in a real life implementation I would've created a model class to take in my request\n    //, but to keep this simple  I prefer to just declare an empty object.\n\n    await fetch(`https://localhost:44356/api/cats`).then(response => response.json()).then(data => {\n      catData.url = data.url;\n      data.tags.forEach(e => {\n        catData.tags.push(e);\n      });\n    });\n    return catData;\n  }\n\n  async fetch10Cats() {\n    let catDataList = [];\n\n    for (let i = 0; i < 9; i++) {\n      catDataList.push(await this.getCatData().then(res => res.catData));\n    } // console.log(catDataList)\n\n\n    return catDataList;\n  }\n\n}\nexport default CatService;","map":{"version":3,"sources":["C:/Users/juanc/Desktop/React/anew/src/services/CatService.js"],"names":["CatService","constructor","catDataList","getCatData","catData","fetch","then","response","json","data","url","tags","forEach","e","push","fetch10Cats","i","res"],"mappings":"AACA,OAAO,MAAMA,UAAN,CAAiB;AAKtBC,EAAAA,WAAW,GAAG;AAAA,SAHdC,WAGc,GAHA,EAGA;AAEb;;AAEe,QAAVC,UAAU,GAAG;AACjB,QAAIC,OAAO,GAAG;AAAE,aAAO,EAAT;AAAa,cAAQ;AAArB,KAAd,CADiB,CAEjB;AACA;;AACA,UAAMC,KAAK,CAAE,kCAAF,CAAL,CACHC,IADG,CACEC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADd,EAEHF,IAFG,CAEEG,IAAI,IAAI;AACZL,MAAAA,OAAO,CAACM,GAAR,GAAcD,IAAI,CAACC,GAAnB;AACAD,MAAAA,IAAI,CAACE,IAAL,CAAUC,OAAV,CAAkBC,CAAC,IAAI;AACrBT,QAAAA,OAAO,CAACO,IAAR,CAAaG,IAAb,CAAkBD,CAAlB;AACD,OAFD;AAGD,KAPG,CAAN;AAQA,WAAOT,OAAP;AACC;;AAEc,QAAXW,WAAW,GAAG;AAClB,QAAIb,WAAW,GAAG,EAAlB;;AACA,SAAK,IAAIc,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;AAC1Bd,MAAAA,WAAW,CAACY,IAAZ,CAAiB,MAAM,KAAKX,UAAL,GAAkBG,IAAlB,CAAuBW,GAAG,IAAIA,GAAG,CAACb,OAAlC,CAAvB;AACD,KAJiB,CAKlB;;;AACA,WAAOF,WAAP;AACD;;AA/BqB;AAkCxB,eAAeF,UAAf","sourcesContent":["\r\nexport class CatService {\r\n\r\n  catDataList = []\r\n\r\n\r\n  constructor() {\r\n    \r\n  }\r\n\r\n  async getCatData() {\r\n    let catData = { \"url\": \"\", \"tags\": [] }\r\n    //I'm a typescript guy, in a real life implementation I would've created a model class to take in my request\r\n    //, but to keep this simple  I prefer to just declare an empty object.\r\n    await fetch(`https://localhost:44356/api/cats`)\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        catData.url = data.url\r\n        data.tags.forEach(e => {\r\n          catData.tags.push(e)\r\n        });\r\n      });\r\n    return catData\r\n    }\r\n\r\n  async fetch10Cats() {\r\n    let catDataList = []\r\n    for (let i = 0; i < 9; i++) {\r\n      catDataList.push(await this.getCatData().then(res => res.catData))\r\n    }\r\n    // console.log(catDataList)\r\n    return catDataList\r\n  }\r\n}\r\n\r\nexport default CatService"]},"metadata":{},"sourceType":"module"}