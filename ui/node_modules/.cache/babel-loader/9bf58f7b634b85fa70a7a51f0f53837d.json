{"ast":null,"code":"let catDataList = [];\nconst [imageUrl, imageState] = useState();\n\nconst getCatData = async () => {\n  let catData = {\n    \"url\": \"\",\n    \"tags\": []\n  }; //I'm a typescript guy, in a real life implementation I would've created a model class to take in my request\n  //, but to keep this simple  I prefer to just declare an empty object.\n\n  await fetch(`https://localhost:44356/api/cats`).then(response => response.json()).then(data => {\n    catData.url = data.url;\n    data.tags.forEach(e => {\n      catData.tags.push(e);\n    });\n  });\n  return catData;\n};\n\nconst fillImages = () => {\n  for (let i = 0; i < 9; i++) {\n    catDataList.push(getCatData().then(res => res.catData));\n    console.log(catDataList);\n  }\n};\n\nexport default catDataList;","map":{"version":3,"sources":["C:/Users/juanc/Desktop/React/anew/src/services/CatService.js"],"names":["catDataList","imageUrl","imageState","useState","getCatData","catData","fetch","then","response","json","data","url","tags","forEach","e","push","fillImages","i","res","console","log"],"mappings":"AACE,IAAIA,WAAW,GAAG,EAAlB;AAEA,MAAM,CAACC,QAAD,EAAWC,UAAX,IAAyBC,QAAQ,EAAvC;;AACA,MAAMC,UAAU,GAAG,YAAY;AAC7B,MAAIC,OAAO,GAAG;AAAE,WAAO,EAAT;AAAa,YAAQ;AAArB,GAAd,CAD6B,CAE7B;AACA;;AACA,QAAMC,KAAK,CAAE,kCAAF,CAAL,CACHC,IADG,CACEC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADd,EAEHF,IAFG,CAEEG,IAAI,IAAI;AACZL,IAAAA,OAAO,CAACM,GAAR,GAAcD,IAAI,CAACC,GAAnB;AACAD,IAAAA,IAAI,CAACE,IAAL,CAAUC,OAAV,CAAkBC,CAAC,IAAI;AACrBT,MAAAA,OAAO,CAACO,IAAR,CAAaG,IAAb,CAAkBD,CAAlB;AACD,KAFD;AAGD,GAPG,CAAN;AAQA,SAAOT,OAAP;AACD,CAbD;;AAeA,MAAMW,UAAU,GAAG,MAAM;AAEvB,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;AAC1BjB,IAAAA,WAAW,CAACe,IAAZ,CAAiBX,UAAU,GAAGG,IAAb,CAAmBW,GAAG,IAAIA,GAAG,CAACb,OAA9B,CAAjB;AACAc,IAAAA,OAAO,CAACC,GAAR,CAAYpB,WAAZ;AACD;AAEF,CAPD;;AASA,eAAeA,WAAf","sourcesContent":["\r\n  let catDataList = []\r\n\r\n  const [imageUrl, imageState] = useState()\r\n  const getCatData = async () => {\r\n    let catData = { \"url\": \"\", \"tags\": [] }\r\n    //I'm a typescript guy, in a real life implementation I would've created a model class to take in my request\r\n    //, but to keep this simple  I prefer to just declare an empty object.\r\n    await fetch(`https://localhost:44356/api/cats`)\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        catData.url = data.url\r\n        data.tags.forEach(e => {\r\n          catData.tags.push(e)\r\n        });\r\n      });\r\n    return catData\r\n  }\r\n\r\n  const fillImages = () => {\r\n\r\n    for (let i = 0; i < 9; i++) {\r\n      catDataList.push(getCatData().then( res => res.catData))\r\n      console.log(catDataList)\r\n    }\r\n\r\n  }\r\n\r\n  export default catDataList"]},"metadata":{},"sourceType":"module"}